plugins {
    id 'checkstyle'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'com.bitpay'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly 'org.projectlombok:lombok:1.18.26'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.bitpay:bitpay_sdk:9.0.0-beta1'
    implementation 'org.liquibase:liquibase-core:4.19.0'
    implementation 'com.h2database:h2:2.1.214'
    implementation 'org.springframework:spring-webflux:6.0.5'
    implementation 'org.springframework:spring-websocket:6.0.11'
    implementation 'org.springframework:spring-messaging:6.0.5'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.0.2"
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    intTestImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.named('test') {
    useJUnitPlatform()
    dependsOn 'cleanTest'
    testLogging {
        events "failed"
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    dependsOn 'cleanTest'
    testLogging {
        events "failed"
    }
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}

checkstyle {
    toolVersion = "8.39"
    project.ext.checkstyleVersion = '8.39'
    configFile = rootProject.file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
}

tasks.withType(Checkstyle) {
    reports {
        xml.destination rootProject.file("build/reports/checkstyle-result.xml")
    }
}
